generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id             Int            @id @default(autoincrement())
  username       String         @unique @db.VarChar(50)
  password       String         @db.VarChar(60)
  nickName       String         @default("") @db.VarChar(50)
  email          String         @unique @db.VarChar(50)
  headPic        String         @default("") @db.VarChar(100)
  createTime     DateTime       @default(now())
  updateTime     DateTime       @updatedAt
  inverseFriends friendship[]   @relation("friendToUser")
  friends        friendship[]   @relation("userToFriend")
  chatrooms      userChatroom[]
}

model friendship {
  userId   Int
  friendId Int
  friend   user @relation("friendToUser", fields: [friendId], references: [id])
  user     user @relation("userToFriend", fields: [userId], references: [id])

  @@id([userId, friendId])
  @@index([friendId], map: "friendship_friendId_fkey")
}

model friendRequest {
  id         Int                 @id @default(autoincrement())
  fromUserId Int
  toUserId   Int
  reason     String              @default("") @db.VarChar(200)
  status     FriendRequestStatus @default(appending)
  createTime DateTime            @default(now())
  updateTime DateTime            @updatedAt
}

model chatroom {
  id         Int            @id @default(autoincrement())
  name       String         @db.VarChar(50)
  type       ChatroomType   @default(single)
  createTime DateTime       @default(now())
  updateTime DateTime       @updatedAt
  creatorId  Int
  users      userChatroom[]
}

model userChatroom {
  userId     Int
  chatroomId Int
  chatroom   chatroom @relation(fields: [chatroomId], references: [id])
  user       user     @relation(fields: [userId], references: [id])

  @@id([userId, chatroomId])
  @@index([chatroomId], map: "userChatroom_chatroomId_fkey")
}

model chatHistory {
  id         Int                    @id @default(autoincrement())
  chatroomId Int
  sendUserId Int
  content    String                 @db.VarChar(500)
  type       ChatHistoryContentType @default(text)
  createTime DateTime               @default(now())
  updateTime DateTime               @updatedAt
}

enum FriendRequestStatus {
  appending
  approved
  rejected
}

enum ChatroomType {
  single @map("0")
  group  @map("1")
}

enum ChatHistoryContentType {
  text
  image
  file
}
