// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id             Int          @id @default(autoincrement())
  username       String       @unique @db.VarChar(50)
  password       String       @db.VarChar(60)
  nickName       String       @default("") @db.VarChar(50)
  email          String       @unique @db.VarChar(50)
  headPic        String       @default("") @db.VarChar(100)
  createTime     DateTime     @default(now())
  updateTime     DateTime     @updatedAt
  friends        friendship[] @relation("userToFriend")
  inverseFriends friendship[] @relation("friendToUser")
}

model friendship {
  user     user @relation("userToFriend", fields: [userId], references: [id])
  userId   Int
  friend   user @relation("friendToUser", fields: [friendId], references: [id])
  friendId Int

  @@id([userId, friendId])
}

enum FriendRequestStatus {
  appending
  approved
  rejected
}

model friendRequest {
  id         Int                 @id @default(autoincrement())
  fromUserId Int
  toUserId   Int
  reason     String              @db.VarChar(200) @default("")
  status     FriendRequestStatus @default(appending)
  createTime DateTime            @default(now())
  updateTime DateTime            @updatedAt
}
